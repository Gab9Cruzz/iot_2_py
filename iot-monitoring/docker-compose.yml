version: '3.8'

services:
  # Apache Zookeeper para coordinación de Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: iot-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: WARN
    ports:
      - "2181:2181"
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Apache Kafka para streaming de datos
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: iot-kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
    networks:
      - iot-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 30s
      timeout: 10s
      retries: 3

  # InfluxDB para almacenamiento de series temporales
  influxdb:
    image: influxdb:2.7
    container_name: iot-influxdb
    ports:
      - "8086:8086"
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: iot_admin
      DOCKER_INFLUXDB_INIT_PASSWORD: iot_password_2024
      DOCKER_INFLUXDB_INIT_ORG: IoT_Organization
      DOCKER_INFLUXDB_INIT_BUCKET: sensor_data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: iot-super-secret-token-2024
      DOCKER_INFLUXDB_INIT_RETENTION: 30d
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    networks:
      - iot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Grafana para visualización de datos
  grafana:
    image: grafana/grafana:latest
    container_name: iot-grafana
    depends_on:
      influxdb:
        condition: service_healthy
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: grafana_admin_2024
      GF_INSTALL_PLUGINS: grafana-clock-panel,grafana-simple-json-datasource
      GF_USERS_ALLOW_SIGN_UP: false
      GF_SERVER_DOMAIN: localhost
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - iot-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Productor de datos de sensores IoT
  iot-producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: iot-producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SENSOR_INTERVAL: 5
      LOG_LEVEL: INFO
    volumes:
      - ./producer/:/app
      - ./logs/:/app/logs
    networks:
      - iot-network
    restart: unless-stopped

  # Consumidor y procesador de datos
  iot-consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: iot-consumer
    depends_on:
      kafka:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      INFLUX_URL: http://influxdb:8086
      INFLUX_TOKEN: iot-super-secret-token-2024
      INFLUX_ORG: IoT_Organization
      INFLUX_BUCKET: sensor_data
      LOG_LEVEL: INFO
    volumes:
      - ./consumer/:/app
      - ./logs/:/app/logs
    networks:
      - iot-network
    restart: unless-stopped

volumes:
  influxdb-data:
    driver: local
  influxdb-config:
    driver: local
  grafana-storage:
    driver: local

networks:
  iot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
